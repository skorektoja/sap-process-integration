#summary Simle Explanation Http Post Tool.

= Introduction =

The Http Post Tool is made to send repeatable test cases to mutliple environments of a SAP Process Integration/ABAP Proxy Runtime landscape for testing purposes.

Often the same messages need to be posted through PI again and again, even on DEV and later TEST, eventually even on PROD environments.
To avoid typing these by hand on tools like the common HttpPost Tools that circulate on [http://sdn.sap.com sdn], i build these small HTML/javascript based tool.

It supports posting plain XML and SOAP Messages to the Integration Engine (Central/Proxy Runtime) and to the SAP PI 7.3 HTTP Java based Adapter.

The tool dates back to 2005 from my first workshops for SAP XI 3.0, so it's javascript impl might not be on latest level. Nowadays for a lot of cases SOAPUI (plain SOAP) can do that thing, I also could imagine a way more fly version with local storage, HTML5 or jQuery. However it works fine on common IE and Firerfox Versions and with all common formats (IE with or without SOAP envelope) and doesn't require any jar files, just simply a web browser.

= Test Data and structure of the tool =

The tool itself consists of a single HTML page and the Functions.js, that contains all necessary Javascript functions.

Beside that Test Data could be entered either manually or stored locally.

 * Storage of environment data (server, host and interfaces to test) are stored in a JSON String (Data.js)
 * Storage of Payload is done locally in a folder named payloads

The file structure of the whole tool looks like this:

 * HttpPostTool.html
 * Functions.js
 * Data.js (references payloads folder)
 * payloads (Folder)
      * 1.xml
      * 2.xml
      * 3.xml

= Structure of Data.js = 

Defining a PI instance:
{{{
var instances={
    "instances":[ 
       {"name":"<your PI Instance name>", 
        "host": "<your host name of the PI instance>",
        "port": "<your port of the PI instance>"
       }
    ]
    };
}}}

Adding test data to the instance with the senders array (here DEV_SENDER_1 and DEV_SENDER_2 :

{{{
var instances={
    "instances":[ 
       {"name":"<your PI Instance name>", 
        "host": "<your host name of the PI instance>",
        "port": "<your port of the PI instance>",
        "senders": [
           {"name": "DEV_SENDER_1", 
            "interfaces":[
               {"name":"getCustomerWithDetail",
        	"namespace":"http://mycompany.com/domain",
                "qos":"BE",
                "payload":"payloads/GetCustomersRequest.xml"
               },
               {"name":"PostFinanceStatement",
        	"namespace":"http://mycompany.com/finance/statements",
                "qos":"EOIO",
                "payload":"payloads/PostFinanceStatement.xml"
               }
            ]
           },
           {"name": "DEV_SENDER_2", 
            "interfaces":[
               {"name":"getCustomerWithDetail",
                "namespace":"http://mycompany.com/domain",
                "qos":"BE",
                "payload":"payloads/GetCustomersRequest.xml"
               }
             ]
           }
      ]
     };
}}}

...tbc